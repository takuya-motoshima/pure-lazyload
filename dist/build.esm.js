!function(r,e){void 0===e&&(e={});var n=e.insertAt;if(r&&"undefined"!=typeof document){var i=document.head||document.getElementsByTagName("head")[0],t=document.createElement("style");t.type="text/css","top"===n&&i.firstChild?i.insertBefore(t,i.firstChild):i.appendChild(t),t.styleSheet?t.styleSheet.cssText=r:t.appendChild(document.createTextNode(r))}}(":root {\r\n  --lz-spinner-size: 16px;\r\n}\r\n\r\n.lz-wrap {\r\n  background-color: rgb(240, 237, 234);\r\n}\r\n\r\n  .lz-wrap img {\r\n    z-index: 1;\r\n  }\r\n\r\n  .lz-wrap .lz-spinner {\r\n    position: absolute;\r\n    z-index: 2;\r\n    top: calc(50% - var(--lz-spinner-size) / 2);\r\n    left: calc(50% - var(--lz-spinner-size) / 2);\r\n    border-radius: 50%;\r\n    width: var(--lz-spinner-size);\r\n    height: var(--lz-spinner-size);\r\n    border-top: calc(var(--lz-spinner-size) * .11) solid rgba(29,161,242,.2);\r\n    border-right: calc(var(--lz-spinner-size) * .11) solid rgba(29,161,242,.2);\r\n    border-bottom: calc(var(--lz-spinner-size) * .11) solid rgba(29,161,242,.2);\r\n    border-left: calc(var(--lz-spinner-size) * .11) solid rgb(29,161,242);\r\n    transform: translate(0);\r\n    animation: lz-spinner 1.1s infinite linear;\r\n  }\r\n\r\n  .lz-wrap .lz-spinner.lz-spinner-lg {\r\n    top: calc(50% - var(--lz-spinner-size) * 1.5 / 2);\r\n    left: calc(50% - var(--lz-spinner-size) * 1.5 / 2);\r\n    width: calc(var(--lz-spinner-size)  * 1.5);\r\n    height: calc(var(--lz-spinner-size) * 1.5);\r\n    border-top: calc(var(--lz-spinner-size) * 1.5 * .11) solid rgba(29,161,242,.2);\r\n    border-right: calc(var(--lz-spinner-size) * 1.5 * .11) solid rgba(29,161,242,.2);\r\n    border-bottom: calc(var(--lz-spinner-size) * 1.5 * .11) solid rgba(29,161,242,.2);\r\n    border-left: calc(var(--lz-spinner-size) * 1.5 * .11) solid rgb(29,161,242);\r\n  }\r\n\r\n  .lz-wrap .lz-spinner.lz-spinner-2x {\r\n    top: calc(50% - var(--lz-spinner-size) * 2 / 2);\r\n    left: calc(50% - var(--lz-spinner-size) * 2 / 2);\r\n    width: calc(var(--lz-spinner-size)  * 2);\r\n    height: calc(var(--lz-spinner-size) * 2);\r\n    border-top: calc(var(--lz-spinner-size) * 2 * .11) solid rgba(29,161,242,.2);\r\n    border-right: calc(var(--lz-spinner-size) * 2 * .11) solid rgba(29,161,242,.2);\r\n    border-bottom: calc(var(--lz-spinner-size) * 2 * .11) solid rgba(29,161,242,.2);\r\n    border-left: calc(var(--lz-spinner-size) * 2 * .11) solid rgb(29,161,242);\r\n  }\r\n\r\n  @keyframes lz-spinner {\r\n    0% {\r\n      transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n\r\n.lz-gallery {\r\n  display: grid;\r\n  grid-auto-flow: dense;\r\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\n  grid-auto-rows: 200px;\r\n  grid-gap: 10px;\r\n  padding: 10px;\r\n}\r\n\r\n  .lz-gallery .lz-gallery-item {\r\n    margin: 0;\r\n    padding: 0;\r\n    grid-area: span 1/span 1;\r\n  }\r\n\r\n  .lz-gallery .lz-gallery-item.lz-gallery-item-horizontal {\r\n    grid-area: span 1/span 2;\r\n  }\r\n\r\n  .lz-gallery .lz-gallery-item.lz-gallery-item-big {\r\n    grid-area: span 2/span 2;\r\n  }\r\n\r\n  .lz-gallery .lz-gallery-item.lz-gallery-item-vertical {\r\n    grid-area: span 2/span 1;\r\n  }\r\n\r\n    .lz-gallery-item img {\r\n      width: 100%;\r\n      height: 100%;\r\n      object-fit: cover;\r\n    }\r\n");class r{static observe(r,e){if(e=Object.assign({root:null,rootMargin:"0px",background:"random",debugging:!1},e||{}),window.IntersectionObserver){this.debugging=e.debugging,this.io=new IntersectionObserver(r=>{for(let e of r)if(e.intersectionRatio>0||e.isIntersecting){const r=e.target;this.io.unobserve(r);let n=r.getAttribute("data-src");if(!n)return;r.setAttribute("src",n),r.removeAttribute("data-src"),(r=>{r.addEventListener("load",()=>{this.debug("Loaded image "+r.getAttribute("src"));const e=r.parentNode,n=e.parentNode;n.insertBefore(r,e),n.removeChild(e),r.style.visibility=r.dataset.originalVisibility,r.removeAttribute("data-original-visibility")},!1)})(r)}},{root:e.root,rootMargin:e.rootMargin,threshold:0});for(let n of r){const r=document.createElement("div");r.classList.add("lz-wrap"),r.style.backgroundColor="random"===e.background?"#"+Math.floor(16777215*Math.random()).toString(16):e.background;const i=Object.assign({},getComputedStyle(n));r.style.position="static"!==i.position?i.position:"relative",r.style.display="inline"===i.display?"inline-block":i.display,r.style.width=i.width,r.style.height=i.height,r.style.margin=i.margin,r.style.zIndex=i.zIndex,r.style.top=i.top,r.style.right=i.right,r.style.bottom=i.bottom,r.style.left=i.left,n.dataset.originalVisibility=i.visibility,n.style.visibility="hidden";const t=document.createElement("div");t.classList.add("lz-spinner"),t.style.zIndex="2",n.before(r),r.append(n,t)}for(let e of r)this.io.observe(e)}else console.warn("This browser does not support lazy load")}static destroy(){this.io&&(this.io.disconnect(),this.io=void 0)}static debug(...r){this.debugging&&console.log.apply(console,r)}}r.io=void 0,r.debugging=!1;export default r;

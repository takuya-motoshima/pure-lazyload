!function(e,r){"object"==typeof exports&&"undefined"!=typeof module?module.exports=r():"function"==typeof define&&define.amd?define(r):(e=e||self).pureLazyload=r()}(this,(function(){"use strict";!function(e,r){void 0===r&&(r={});var t=r.insertAt;if(e&&"undefined"!=typeof document){var n=document.head||document.getElementsByTagName("head")[0],o=document.createElement("style");o.type="text/css","top"===t&&n.firstChild?n.insertBefore(o,n.firstChild):n.appendChild(o),o.styleSheet?o.styleSheet.cssText=e:o.appendChild(document.createTextNode(e))}}(".lz-wrap {\r\n  background-color: rgb(240, 237, 234);\r\n}\r\n\r\n  .lz-wrap img {\r\n    z-index: 1;\r\n  }\r\n\r\n  .lz-wrap .lz-spinner {\r\n    position: absolute;\r\n    z-index: 2;\r\n    top: calc(50% - 16px / 2);\r\n    left: calc(50% - 16px / 2);\r\n    border-radius: 50%;\r\n    width: 16px;\r\n    height: 16px;\r\n    border-top: calc(16px * .11) solid rgba(29,161,242,.2);\r\n    border-right: calc(16px * .11) solid rgba(29,161,242,.2);\r\n    border-bottom: calc(16px * .11) solid rgba(29,161,242,.2);\r\n    border-left: calc(16px * .11) solid rgb(29,161,242);\r\n    transform: translate(0);\r\n    animation: lz-spinner 1.1s infinite linear;\r\n  }\r\n\r\n  @keyframes lz-spinner {\r\n    0% {\r\n      transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n\r\n.lz-gallery {\r\n  display: grid;\r\n  grid-auto-flow: dense;\r\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\n  grid-auto-rows: 200px;\r\n  grid-gap: 10px;\r\n  padding: 10px;\r\n}\r\n\r\n  .lz-gallery .lz-gallery-item {\r\n    margin: 0;\r\n    padding: 0;\r\n    grid-area: span 1/span 1\r\n  }\r\n\r\n  .lz-gallery .lz-gallery-item-horizontal {\r\n    grid-area: span 1/span 2;\r\n  }\r\n\r\n  .lz-gallery .lz-gallery-item-big {\r\n    grid-area: span 2/span 2;\r\n  }\r\n\r\n  .lz-gallery .lz-gallery-item-vertical {\r\n    grid-area: span 2/span 1;\r\n  }\r\n\r\n    .lz-gallery .lz-gallery-item img {\r\n      width: 100%;\r\n      height: 100%;\r\n      object-fit: cover;\r\n    }\r\n");class e{static load(e,r){r=Object.assign({root:null,rootMargin:"0px",background:"random",debugging:!1},r||{}),window.IntersectionObserver||console.warn("This browser does not support lazy load"),this.debugging=r.debugging,this.observer=new IntersectionObserver(e=>{for(let r of e){if(!r.isIntersecting)return;const e=r.target;this.observer.unobserve(e);let t=e.getAttribute("data-src");if(!t)return;e.setAttribute("src",t),(e=>{e.addEventListener("load",()=>{this.debug("Loaded image "+e.getAttribute("src"));const r=e.parentNode,t=r.parentNode;t.insertBefore(e,r),t.removeChild(r);const n=JSON.parse(e.dataset.styles);for(let[r,t]of Object.entries(n))e.style[r]=t},!1)})(e)}},{root:r.root,rootMargin:r.rootMargin,threshold:0});for(let t of e){const e=document.createElement("div");e.classList.add("lz-wrap"),e.style.backgroundColor="random"===r.background?"#"+Math.floor(16777215*Math.random()).toString(16):r.background;const{display:n,margin:o,width:i,height:s,position:a,top:l,right:d,bottom:g,left:p,zIndex:c}=getComputedStyle(t);e.style.display="inline"===n?"inline-block":n,e.style.width=i,e.style.height=s,o&&(e.style.margin=o,t.style.margin="0px"),"static"!==a?(e.style.position=a,e.style.zIndex=c,e.style.top=l,e.style.right=d,e.style.bottom=g,e.style.left=p,t.style.position="static",t.style.zIndex="1"):e.style.position="relative";const y=document.createElement("div");y.classList.add("lz-spinner"),y.style.zIndex="2",t.dataset.styles=JSON.stringify({margin:o}),t.before(e),e.append(t,y),this.observer.observe(t)}}static destroy(){this.observer&&(this.observer.disconnect(),this.observer=void 0)}static debug(...e){this.debugging&&console.log.apply(console,e)}}return e.observer=void 0,e.debugging=!1,e}));
